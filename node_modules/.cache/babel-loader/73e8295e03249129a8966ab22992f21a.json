{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notes: [],\n  subjectsList: [\"Maths\", \"Physics\"],\n  topicsList: [],\n  currentSubject: '',\n  currentTopic: ''\n};\nconst notesSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    saveSubject: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload);\n\n      if (position === -1) {\n        state.subjectsList.push(action.payload);\n        alert(\"Subject added successfully\");\n      } else {\n        alert(\"Subject already exists\");\n      }\n\n      state.currentSubject = action.payload;\n    },\n    updateSubjectsList: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload.old);\n      if (position !== -1) delete state.subjectsList[position];\n      state.subjectsList.push(action.payload.new);\n      state.currentSubject = action.payload.new;\n      alert(\"Subject name edited successfully\");\n    },\n    deleteSubject: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload);\n\n      if (position !== -1) {\n        delete state.subjectsList[position];\n        state.subjectsList.push(action.payload);\n        alert(\"Subject deleted successfully\");\n        state.currentSubject = tempSubjects[0];\n      } else {\n        alert(\"Subject doesn't exists\");\n        state.currentSubject = \"\";\n      }\n    },\n    saveNote: (state, action) => {\n      state.notes.push(action.payload);\n    },\n    setCurrentSubject: (state, action) => {\n      state.currentSubject = action.payload;\n    }\n  }\n});\nexport const {\n  saveSubject,\n  updateSubjectsList,\n  deleteSubject,\n  saveNote,\n  setCurrentSubject\n} = notesSlice.actions;\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/features/notesSlice.js"],"names":["createSlice","initialState","notes","subjectsList","topicsList","currentSubject","currentTopic","notesSlice","name","reducers","saveSubject","state","action","position","indexOf","payload","push","alert","updateSubjectsList","old","new","deleteSubject","tempSubjects","saveNote","setCurrentSubject","actions","selectSubjectsList","notebook","selectCurrentSubject","selectTopicsList","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    notes: [],\n    subjectsList: [\"Maths\", \"Physics\"],\n    topicsList: [],\n    currentSubject: '',\n    currentTopic: '',\n}\n\nconst notesSlice = createSlice({\n    name: 'notebook',\n    initialState,\n    reducers: {\n        saveSubject: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload);\n            if(position === -1){\n                state.subjectsList.push(action.payload);\n                alert(\"Subject added successfully\");\n            }\n            else{\n                alert(\"Subject already exists\");\n            }\n            state.currentSubject = action.payload;\n        },\n\n        updateSubjectsList: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload.old);\n            if(position !== -1) delete state.subjectsList[position];\n            state.subjectsList.push(action.payload.new);\n            state.currentSubject = action.payload.new;\n            alert(\"Subject name edited successfully\");\n        },\n\n        deleteSubject: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload);\n            if(position !== -1){\n                delete state.subjectsList[position];\n                state.subjectsList.push(action.payload);\n                alert(\"Subject deleted successfully\");\n                state.currentSubject = tempSubjects[0];\n            }\n            else{\n                alert(\"Subject doesn't exists\");\n                state.currentSubject = \"\";\n            }\n        },\n\n        saveNote: (state, action) => {\n            state.notes.push(action.payload);\n        },\n\n        setCurrentSubject: (state, action) => {\n            state.currentSubject = action.payload;\n        },\n\n    }\n});\n\nexport const {\n    saveSubject, updateSubjectsList, deleteSubject, saveNote, setCurrentSubject\n} = notesSlice.actions\n\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\n\n\nexport default notesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}