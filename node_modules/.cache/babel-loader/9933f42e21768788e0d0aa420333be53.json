{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  note: \"\",\n  subjectsList: [],\n  topicsList: [],\n  currentSubject: '',\n  currentTopic: \"\"\n};\nconst notesSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    saveSubject: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload);\n\n      if (position === -1) {\n        state.subjectsList.push(action.payload);\n        if (state.currentSubject === '') state.currentSubject = action.payload;\n        state.topicsList = [];\n      }\n    },\n    deleteSubject: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload);\n\n      if (position !== -1) {\n        state.subjectsList.splice(position, 1);\n        state.currentSubject = state.subjectsList[0];\n      }\n    },\n    saveTopic: (state, action) => {\n      let position = state.topicsList.indexOf(action.payload);\n\n      if (position === -1) {\n        state.topicsList.push(action.payload);\n        if (state.currentTopic === '') state.currentTopic = action.payload;\n      }\n    },\n    deleteTopic: (state, action) => {\n      let position = state.topicsList.indexOf(action.payload);\n\n      if (position !== -1) {\n        state.topicsList.splice(position, 1);\n        state.currentTopic = state.topicsList[0];\n      }\n    },\n    saveNote: (state, action) => {\n      state.note = action.payload;\n    },\n    setCurrentSubject: (state, action) => {\n      state.currentSubject = action.payload;\n    },\n    setCurrentTopic: (state, action) => {\n      state.currentTopic = action.payload;\n    },\n    emptyTopicsList: (state, action) => {\n      state.topicsList = [];\n      state.currentTopic = \"\";\n    }\n  }\n});\nexport const {\n  saveSubject,\n  updateSubjectsList,\n  deleteSubject,\n  saveTopic,\n  updateTopicsList,\n  deleteTopic,\n  saveNote,\n  setCurrentSubject,\n  setCurrentTopic,\n  emptyTopicsList\n} = notesSlice.actions;\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport const selectCurrentTopic = state => state.notebook.currentTopic;\nexport const selectNote = state => state.notebook.note;\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/features/notesSlice.js"],"names":["createSlice","initialState","note","subjectsList","topicsList","currentSubject","currentTopic","notesSlice","name","reducers","saveSubject","state","action","position","indexOf","payload","push","deleteSubject","splice","saveTopic","deleteTopic","saveNote","setCurrentSubject","setCurrentTopic","emptyTopicsList","updateSubjectsList","updateTopicsList","actions","selectSubjectsList","notebook","selectCurrentSubject","selectTopicsList","selectCurrentTopic","selectNote","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    note: \"\",\n    subjectsList: [],\n    topicsList: [],\n    currentSubject: '',\n    currentTopic: \"\",\n}\n\nconst notesSlice = createSlice({\n    name: 'notebook',\n    initialState,\n    reducers: {\n        saveSubject: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload);\n            if(position === -1){\n                state.subjectsList.push(action.payload);\n                if(state.currentSubject === '') \n                    state.currentSubject = action.payload;\n                state.topicsList = [];\n            }\n        },\n\n        deleteSubject: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload);\n            if(position !== -1){\n                state.subjectsList.splice(position, 1);\n                state.currentSubject = state.subjectsList[0];\n            }\n        },\n\n        saveTopic: (state, action) => {\n            let position = state.topicsList.indexOf(action.payload);\n            if(position === -1){\n                state.topicsList.push(action.payload);\n                if(state.currentTopic === '') \n                    state.currentTopic = action.payload;\n            }\n        },\n\n        deleteTopic: (state, action) => {\n            let position = state.topicsList.indexOf(action.payload);\n            if(position !== -1){\n                state.topicsList.splice(position, 1);\n                state.currentTopic = state.topicsList[0];\n            }\n        },\n\n        saveNote: (state, action) => {\n            state.note = action.payload;\n        },\n\n        setCurrentSubject: (state, action) => {\n            state.currentSubject = action.payload;\n        },\n\n        setCurrentTopic: (state, action) => {\n            state.currentTopic = action.payload;\n        },\n\n        emptyTopicsList: (state, action) => {\n            state.topicsList = [];\n            state.currentTopic = \"\";\n        },\n    }\n});\n\nexport const {\n    saveSubject, updateSubjectsList, deleteSubject, \n    saveTopic, updateTopicsList, deleteTopic, \n    saveNote, setCurrentSubject, setCurrentTopic, \n    emptyTopicsList,\n} = notesSlice.actions\n\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport const selectCurrentTopic = state => state.notebook.currentTopic;\nexport const selectNote = state => state.notebook.note;\n\nexport default notesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}