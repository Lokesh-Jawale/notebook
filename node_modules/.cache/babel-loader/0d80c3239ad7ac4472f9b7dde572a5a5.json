{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Subject.js\",\n    _s = $RefreshSig$();\n\nimport './Subject.css';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { green } from '@material-ui/core/colors';\nimport { db } from '../firebase.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveSubject, updateSubjectsList, deleteSubject, selectCurrentSubject, setCurrentSubject } from '../features/notesSlice';\nimport { selectSubjectsList } from '../features/notesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nfunction Subject() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [subject, setSubject] = useState('');\n  const dispatch = useDispatch();\n  const subjectsList = useSelector(selectSubjectsList);\n  const currentSubject = useSelector(selectCurrentSubject);\n  useEffect(() => {\n    db.collection(\"notebooks\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        // console.log(doc.id, \" \", doc.data());\n        dispatch(saveSubject(doc.id));\n      });\n    });\n  }, []);\n\n  const handleChange = event => {\n    var _event$target$value;\n\n    setSubject(event.target.value);\n\n    if (((_event$target$value = event.target.value) === null || _event$target$value === void 0 ? void 0 : _event$target$value.length) > 0) {\n      dispatch(setCurrentSubject(event.target.value));\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseAdd = () => {\n    if ((subject === null || subject === void 0 ? void 0 : subject.length) > 0 && currentSubject !== subject) {\n      db.collection(\"notebooks\").doc(subject).collection(\"topics\"); // dispatch(saveSubject(subject));\n\n      dispatch(setCurrentSubject(subject));\n    }\n\n    setOpen(false);\n  };\n\n  const handleCloseEdit = () => {\n    let position = subjectsList.indexOf(subject);\n\n    if ((subject === null || subject === void 0 ? void 0 : subject.length) > 0 && position === -1) {\n      console.log(\"UPDating \");\n      db.collection(\"notebooks\").doc(currentSubject).get().then(function (doc) {\n        if (doc && doc.exists) {\n          var data = doc.data(); // deletes the old Subject document\n\n          db.collection(\"notebooks\").doc(currentSubject).delete().then( // saves the data to new Subject document\n          dispatch(deleteSubject(currentSubject)), db.collection(\"notebooks\").doc(subject).set(data));\n        }\n      });\n      dispatch(setCurrentSubject(subject)); // dispatch(updateSubjectsList(\n      //     {old:currentSubject, new:subject}\n      // ))\n    }\n\n    if (position !== -1) {\n      alert(subject + \" subject already exists. Choose different name\");\n    }\n\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteCurrentSubject = () => {\n    if ((currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.length) > 0) {\n      db.collection(\"notebooks\").doc(currentSubject).delete();\n      dispatch(deleteSubject(currentSubject));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subject\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-outlined-label\",\n          children: \"Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: currentSubject,\n          onChange: handleChange,\n          children: subjectsList.map(item => (subjectsList === null || subjectsList === void 0 ? void 0 : subjectsList.length) > 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"subject__addButton\",\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n          style: {\n            color: green[500]\n          },\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"subject__editButton\",\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          color: \"primary\",\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"subject__deleteButton\",\n        onClick: deleteCurrentSubject,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"secondary\",\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add or Edit a Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"demo-dialog-native\",\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: subject,\n              onChange: e => setSubject(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAdd,\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEdit,\n          color: \"primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Subject, \"rr+nNOvRueG843kbo/zo9bMsZnw=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = Subject;\nexport default Subject;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subject\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Subject.js"],"names":["React","useState","useEffect","makeStyles","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","FormControl","Select","AddBoxIcon","DeleteIcon","EditIcon","green","db","useDispatch","useSelector","saveSubject","updateSubjectsList","deleteSubject","selectCurrentSubject","setCurrentSubject","selectSubjectsList","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","Subject","classes","open","setOpen","subject","setSubject","dispatch","subjectsList","currentSubject","collection","onSnapshot","querySnapshot","forEach","doc","id","handleChange","event","target","value","length","handleClickOpen","handleCloseAdd","handleCloseEdit","position","indexOf","console","log","get","then","exists","data","delete","set","alert","handleClose","deleteCurrentSubject","map","item","color","e"],"mappings":"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","sourcesContent":["import './Subject.css';\nimport React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { green } from '@material-ui/core/colors';\nimport {db} from '../firebase.js';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveSubject, updateSubjectsList, deleteSubject, selectCurrentSubject,  setCurrentSubject } from '../features/notesSlice';\nimport { selectSubjectsList } from '../features/notesSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nfunction Subject() {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [subject, setSubject] = useState('');\n    const dispatch = useDispatch();\n    const subjectsList = useSelector(selectSubjectsList);\n    const currentSubject = useSelector(selectCurrentSubject);\n\n    useEffect(() => {\n        db.collection(\"notebooks\")\n            .onSnapshot((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // console.log(doc.id, \" \", doc.data());\n                    dispatch(saveSubject(doc.id));\n                });\n            });\n    }, [])\n\n    const handleChange = (event) => {\n        setSubject(event.target.value);\n        if(event.target.value?.length > 0){\n            dispatch(setCurrentSubject(event.target.value));\n        }\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleCloseAdd = () => {\n        if(subject?.length > 0 && currentSubject!== subject){\n            db.collection(\"notebooks\")\n                .doc(subject)\n                .collection(\"topics\");\n            // dispatch(saveSubject(subject));\n            dispatch(setCurrentSubject(subject));\n        }\n        setOpen(false);\n    };\n\n    const handleCloseEdit = () => {\n        let position = subjectsList.indexOf(subject);\n        if(subject?.length > 0 && position === -1){\n            console.log(\"UPDating \");\n            db.collection(\"notebooks\").doc(currentSubject).get().then(function (doc) {\n                if (doc && doc.exists) {\n                    var data = doc.data();\n                    // deletes the old Subject document\n                    db.collection(\"notebooks\").doc(currentSubject).delete().then(\n                        // saves the data to new Subject document\n                        dispatch(deleteSubject(currentSubject)),\n                        db.collection(\"notebooks\").doc(subject).set(data)\n                    );\n                }\n            });\n            dispatch(setCurrentSubject(subject));\n            // dispatch(updateSubjectsList(\n            //     {old:currentSubject, new:subject}\n            // ))\n        }\n        if(position !== -1){\n            alert(subject + \" subject already exists. Choose different name\");\n        }\n        setOpen(false);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteCurrentSubject = () => {\n        if(currentSubject?.length > 0){\n            db.collection(\"notebooks\").doc(currentSubject).delete();\n            dispatch(deleteSubject(currentSubject));\n        }\n    }\n\n  return (\n    <div className=\"subject\">\n        \n        <div className=\"subject__buttons\">\n\n            <FormControl variant=\"filled\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Subject</InputLabel>\n                <Select\n                    value={currentSubject}\n                    onChange={handleChange}\n                >\n                    {subjectsList.map(item => (\n                        (subjectsList?.length > 0) \n                        ? <MenuItem value={item}>{item}</MenuItem>\n                        : <MenuItem value=\"\"><em>None</em></MenuItem>\n                    ))}\n                    \n                </Select>\n            </FormControl>\n\n            {/* <Button className=\"subject__addButton\" variant=\"outlined\" color=\"primary\" size=\"large\" onClick={handleClickOpen}>Add | Edit</Button> */}\n            {/* <Button type=\"button\" className=\"subject__deleteButton\" variant=\"outlined\" color=\"secondary\" size=\"large\" endIcon={<DeleteIcon />} onClick={deleteCurrentSubject}></Button> */}\n            <IconButton className=\"subject__addButton\" onClick={handleClickOpen}>\n                <AddBoxIcon style={{ color: green[500] }} fontSize=\"medium\" />\n            </IconButton>\n\n            <IconButton className=\"subject__editButton\" onClick={handleClickOpen}>\n                <EditIcon color=\"primary\" fontSize=\"medium\" />\n            </IconButton>\n\n            <IconButton className=\"subject__deleteButton\" onClick={deleteCurrentSubject}>\n                <DeleteIcon color=\"secondary\" fontSize=\"medium\" />      \n            </IconButton>\n        </div>\n\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Add or Edit a Subject</DialogTitle>\n            <DialogContent>\n                <form className={classes.container}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"demo-dialog-native\">Subject</InputLabel>\n                        <Input value={subject} onChange={e => setSubject(e.target.value)}/>\n                    </FormControl>\n                </form>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleCloseAdd} color=\"primary\">Add</Button>\n                <Button onClick={handleCloseEdit} color=\"primary\">Edit</Button>\n            </DialogActions>\n        </Dialog>\n\n    </div>\n  );\n}\n\nexport default Subject;\n"]},"metadata":{},"sourceType":"module"}