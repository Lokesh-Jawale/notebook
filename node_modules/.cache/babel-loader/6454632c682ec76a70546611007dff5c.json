{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNote, saveNote } from '../features/notesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note() {\n  _s();\n\n  const dispatch = useDispatch();\n  const note = useSelector(selectNote);\n  const [inputNote, setInputNote] = useState('');\n  const [add, setAdd] = useState(!((note === null || note === void 0 ? void 0 : note.length) > 0));\n  const [edit, setEdit] = useState((note === null || note === void 0 ? void 0 : note.length) > 0);\n  useEffect(() => {\n    // setAdd(!(note?.length > 0));\n    // setEdit(note?.length > 0);\n    console.log(add + \" \" + edit);\n  }, []);\n\n  const addNote = e => {\n    e.preventDefault();\n\n    if ((inputNote === null || inputNote === void 0 ? void 0 : inputNote.length) === 0) {\n      alert(\"Note is empty Please add something\");\n    } else {\n      setAdd(!add);\n      setEdit(!edit);\n      dispatch(saveNote(inputNote));\n      alert(\"Note added successfully\");\n    }\n\n    setInputNote('');\n  };\n\n  const editNote = e => {\n    dispatch(saveNote(inputNote));\n    alert(\"Note edited successfully\");\n  };\n\n  const deleteNote = e => {\n    dispatch(saveNote(\"\"));\n    alert(\"Note deleted successfully\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      className: \"note__input\",\n      maxRows: 6,\n      \"aria-label\": \"Add notes\",\n      placeholder: \"Add notes ...\",\n      value: inputNote,\n      disabled: (note === null || note === void 0 ? void 0 : note.length) > 0,\n      onChange: e => setInputNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note__button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addNote,\n        disabled: !add && edit,\n        color: \"primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: editNote,\n        disabled: add && !edit,\n        color: \"primary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: deleteNote,\n        disabled: add,\n        color: \"secondary\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Note, \"MPcMr/+zxo8YgMiefFh1/sc532U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js"],"names":["React","useState","useEffect","TextareaAutosize","Button","useDispatch","useSelector","selectNote","saveNote","Note","dispatch","note","inputNote","setInputNote","add","setAdd","length","edit","setEdit","console","log","addNote","e","preventDefault","alert","editNote","deleteNote","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNote, saveNote } from '../features/notesSlice';\n\nfunction Note() {\n\n    const dispatch = useDispatch();\n    const note = useSelector(selectNote);\n    const [inputNote, setInputNote] = useState('');\n    const [add, setAdd] = useState(!(note?.length > 0));\n    const [edit, setEdit] = useState((note?.length > 0));\n\n    useEffect(() => {\n        \n        // setAdd(!(note?.length > 0));\n        // setEdit(note?.length > 0);\n        console.log(add + \" \" + edit);\n    }, [])\n\n    const addNote = (e) => {\n        e.preventDefault();\n        if(inputNote?.length === 0){\n            alert(\"Note is empty Please add something\");\n\n        }\n        else{\n            setAdd(!add);\n            setEdit(!edit);\n            dispatch(saveNote(inputNote));\n            alert(\"Note added successfully\");\n        }\n        setInputNote('');\n    }\n\n    const editNote = (e) => {\n        dispatch(saveNote(inputNote));\n        alert(\"Note edited successfully\");\n    }\n\n    const deleteNote = (e) => {\n        dispatch(saveNote(\"\"));\n        alert(\"Note deleted successfully\");\n    }\n\n    return (\n        <div className=\"note\">\n            <h2>Notes</h2>\n\n            <p>{note}</p>\n\n            {/* <input  /> */}\n            <TextareaAutosize\n                className=\"note__input\"\n                maxRows={6}\n                aria-label=\"Add notes\"\n                placeholder=\"Add notes ...\"\n                value={inputNote}\n                disabled= {note?.length > 0}\n                onChange={e => setInputNote(e.target.value)}\n            />\n    \n            <div className=\"note__button\">\n                <Button variant=\"contained\" onClick={addNote} disabled={!add && edit} color=\"primary\">Add</Button>\n                <Button variant=\"contained\" onClick={editNote} disabled={add && !edit} color=\"primary\">Edit</Button>\n                <Button variant=\"contained\" onClick={deleteNote} disabled={add} color=\"secondary\">Delete</Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}