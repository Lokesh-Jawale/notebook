{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNote, saveNote } from '../features/notesSlice';\nimport { db } from '../firebase.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note() {\n  _s();\n\n  const [inputNote, setInputNote] = useState('');\n  const dispatch = useDispatch();\n  const note = useSelector(selectNote);\n  useEffect(() => {\n    db.collection(\"notebooks\").where().onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        console.log(doc.data());\n        cities.push(doc.data().name);\n      });\n    });\n  }, []);\n\n  const addNote = e => {\n    e.preventDefault();\n\n    if ((inputNote === null || inputNote === void 0 ? void 0 : inputNote.length) === 0) {\n      alert(\"Note is empty Please add something\");\n    } else {\n      dispatch(saveNote(inputNote));\n      alert(\"Note added successfully\");\n    }\n\n    setInputNote('');\n  };\n\n  const deleteNote = e => {\n    dispatch(saveNote(\"\"));\n    alert(\"Note deleted successfully\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      className: \"note__input\",\n      maxRows: 6,\n      \"aria-label\": \"Add notes\",\n      placeholder: \"Add notes ...\",\n      value: inputNote,\n      onChange: e => setInputNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note__button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addNote,\n        disabled: false,\n        color: \"primary\",\n        children: \"Add | Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: deleteNote,\n        disabled: !note,\n        color: \"secondary\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Note, \"yqLpdm4hSvTBsirF5e//RnjJQpA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js"],"names":["React","useState","useEffect","TextareaAutosize","Button","useDispatch","useSelector","selectNote","saveNote","db","Note","inputNote","setInputNote","dispatch","note","collection","where","onSnapshot","querySnapshot","forEach","doc","console","log","data","cities","push","name","addNote","e","preventDefault","length","alert","deleteNote","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNote, saveNote } from '../features/notesSlice';\nimport {db} from '../firebase.js';\n\nfunction Note() {\n\n    const [inputNote, setInputNote] = useState('');\n    const dispatch = useDispatch();\n    const note = useSelector(selectNote);\n\n    useEffect(() => {\n        db.collection(\"notebooks\").where()\n            .onSnapshot((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    console.log(doc.data());\n                    cities.push(doc.data().name);\n                });\n            });\n    }, [])\n\n    const addNote = (e) => {\n        e.preventDefault();\n        if(inputNote?.length === 0){\n            alert(\"Note is empty Please add something\");\n\n        }\n        else{\n            dispatch(saveNote(inputNote));\n            alert(\"Note added successfully\");\n        }\n        setInputNote('');\n    }\n\n    const deleteNote = (e) => {\n        dispatch(saveNote(\"\"));\n        alert(\"Note deleted successfully\");\n    }\n\n    return (\n        <div className=\"note\">\n            <h2>Notes</h2>\n\n            <p>{note}</p>\n\n            {/* <input  /> */}\n            <TextareaAutosize\n                className=\"note__input\"\n                maxRows={6}\n                aria-label=\"Add notes\"\n                placeholder=\"Add notes ...\"\n                value={inputNote}\n                onChange={e => setInputNote(e.target.value)}\n            />\n    \n            <div className=\"note__button\">\n                <Button variant=\"contained\" onClick={addNote} disabled={false} color=\"primary\">Add | Edit</Button>\n                <Button variant=\"contained\" onClick={deleteNote} disabled={!note} color=\"secondary\">Delete</Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}