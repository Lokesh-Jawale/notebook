{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Topic.js\",\n    _s = $RefreshSig$();\n\nimport './Topic.css';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { green } from '@material-ui/core/colors';\nimport { db } from '../firebase.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveTopic, deleteTopic, setCurrentTopic, emptyTopicsList } from '../features/notesSlice';\nimport { selectTopicsList, selectCurrentSubject, selectCurrentTopic } from '../features/notesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 200\n  }\n}));\n\nfunction Topic() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [topic, setTopic] = useState('');\n  const dispatch = useDispatch();\n  const topicsList = useSelector(selectTopicsList);\n  const currentTopic = useSelector(selectCurrentTopic);\n  const currentSubject = useSelector(selectCurrentSubject);\n  var dbRef = db.collection(\"notebooks\");\n  useEffect(() => {\n    // Fetching realtime (Topics document) from database\n    if (currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.length) {\n      dbRef.doc(currentSubject).collection(\"topics\").onSnapshot(querySnapshot => {\n        if ((querySnapshot === null || querySnapshot === void 0 ? void 0 : querySnapshot.size) === 0) {\n          console.log(\"TOPIC LIST EMPTY\");\n          dispatch(emptyTopicsList([]));\n        } else {\n          querySnapshot.forEach(doc => {\n            // console.log(doc.id, \" \", doc.data());\n            dispatch(saveTopic(doc.id));\n          });\n        }\n      });\n    } else dispatch(emptyTopicsList([]));\n  }, [currentSubject]);\n\n  const handleChange = event => {\n    var _event$target$value;\n\n    setTopic(event.target.value);\n\n    if (((_event$target$value = event.target.value) === null || _event$target$value === void 0 ? void 0 : _event$target$value.length) > 0) {\n      dispatch(setCurrentTopic(event.target.value));\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseAdd = () => {\n    if ((topic === null || topic === void 0 ? void 0 : topic.length) && (currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.length) && topic !== currentTopic) {\n      dbRef.doc(currentSubject).collection(\"topics\").doc(topic).set({\n        note: \"\"\n      }); // dispatch(saveSubject(subject));\n\n      dispatch(setCurrentTopic(topic));\n    }\n\n    setOpen(false);\n  };\n\n  const handleCloseEdit = () => {\n    let position = topicsList.indexOf(topic);\n\n    if ((topic === null || topic === void 0 ? void 0 : topic.length) > 0 && currentTopic !== topic && position === -1) {\n      dbRef.doc(currentSubject).collection(\"topics\").doc(currentTopic).get().then(function (doc) {\n        if (doc && doc.exists) {\n          var data = doc.data(); // deletes the old Subject document\n\n          dbRef.doc(currentSubject).collection(\"topics\").doc(currentTopic).delete().then( // saves the data to new Subject document\n          dispatch(deleteTopic(currentTopic)), dbRef.doc(currentSubject).collection(\"topics\").doc(topic).set(data));\n          dispatch(setCurrentTopic(topic));\n        }\n      });\n    }\n\n    if (position !== -1) {\n      alert(topic + \" topic already exists. Choose different name\");\n    }\n\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteCurrentTopic = () => {\n    if ((currentTopic === null || currentTopic === void 0 ? void 0 : currentTopic.length) > 0) {\n      // delete the current Topic from database as well as state\n      dbRef.doc(currentSubject).collection(\"topics\").doc(currentTopic).delete().then(dispatch(deleteTopic(currentTopic))).catch(error => console.log(error.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topic\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic__form\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-outlined-label\",\n          children: \"Add Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: currentTopic,\n          onChange: handleChange,\n          children: topicsList.map(item => (topicsList === null || topicsList === void 0 ? void 0 : topicsList.length) > 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n            style: {\n              overflowX: auto\n            },\n            value: item,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"topic__addButton\",\n          onClick: handleClickOpen,\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n            style: {\n              color: green[500]\n            },\n            fontSize: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"topic__editButton\",\n          onClick: handleClickOpen,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            color: \"primary\",\n            fontSize: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"topic__deleteButton\",\n          onClick: deleteCurrentTopic,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"secondary\",\n            fontSize: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add or Edit a Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"demo-dialog-native\",\n              children: \"Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: topic,\n              onChange: e => setTopic(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAdd,\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEdit,\n          color: \"primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Topic, \"xvGbQG2hom58G3jVegF+3f4cFKg=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Topic;\nexport default Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Topic.js"],"names":["React","useState","useEffect","makeStyles","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","FormControl","Select","AddBoxIcon","DeleteIcon","EditIcon","green","db","useDispatch","useSelector","saveTopic","deleteTopic","setCurrentTopic","emptyTopicsList","selectTopicsList","selectCurrentSubject","selectCurrentTopic","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","maxWidth","Topic","classes","open","setOpen","topic","setTopic","dispatch","topicsList","currentTopic","currentSubject","dbRef","collection","length","doc","onSnapshot","querySnapshot","size","console","log","forEach","id","handleChange","event","target","value","handleClickOpen","handleCloseAdd","set","note","handleCloseEdit","position","indexOf","get","then","exists","data","delete","alert","handleClose","deleteCurrentTopic","catch","error","message","map","item","overflowX","auto","color","e"],"mappings":"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","sourcesContent":["import './Topic.css';\nimport React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { green } from '@material-ui/core/colors';\nimport {db} from '../firebase.js';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveTopic, deleteTopic,  setCurrentTopic, emptyTopicsList } from '../features/notesSlice';\nimport { selectTopicsList, selectCurrentSubject, selectCurrentTopic } from '../features/notesSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 200,\n  },\n}));\n\nfunction Topic() {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [topic, setTopic] = useState('');\n    const dispatch = useDispatch();\n    const topicsList = useSelector(selectTopicsList);\n    const currentTopic = useSelector(selectCurrentTopic);\n    const currentSubject = useSelector(selectCurrentSubject);\n\n    var dbRef = db.collection(\"notebooks\");\n\n    useEffect(() => {\n        // Fetching realtime (Topics document) from database\n        if(currentSubject?.length){\n            dbRef.doc(currentSubject)\n                .collection(\"topics\")\n                .onSnapshot((querySnapshot) => {\n                    if(querySnapshot?.size === 0){\n                        console.log(\"TOPIC LIST EMPTY\");\n                        dispatch(emptyTopicsList([]));\n                    }\n                    else{\n                        querySnapshot.forEach((doc) => {\n                            // console.log(doc.id, \" \", doc.data());\n                            dispatch(saveTopic(doc.id));\n                        });\n                    }\n                });\n        }\n        else dispatch(emptyTopicsList([]));\n    }, [currentSubject]);\n\n    const handleChange = (event) => {\n        setTopic(event.target.value);\n        if(event.target.value?.length > 0){\n            dispatch(setCurrentTopic(event.target.value));\n        }\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleCloseAdd = () => {\n        if(topic?.length && currentSubject?.length && topic !== currentTopic){\n            dbRef.doc(currentSubject)\n                .collection(\"topics\")\n                .doc(topic)\n                .set({note: \"\"});\n            // dispatch(saveSubject(subject));\n            dispatch(setCurrentTopic(topic));\n        }\n        setOpen(false);\n    };\n\n    const handleCloseEdit = () => {\n        let position = topicsList.indexOf(topic);\n        if(topic?.length > 0 && currentTopic !== topic && position === -1){\n            dbRef.doc(currentSubject)\n                .collection(\"topics\")\n                .doc(currentTopic).get()\n                .then(function (doc) {\n                    if (doc && doc.exists) {\n                        var data = doc.data();\n                        // deletes the old Subject document\n                        dbRef.doc(currentSubject).collection(\"topics\")\n                            .doc(currentTopic).delete().then(\n                            // saves the data to new Subject document\n                            dispatch(deleteTopic(currentTopic)),\n                            dbRef.doc(currentSubject).collection(\"topics\")\n                                .doc(topic)\n                                .set(data)\n                        );\n                        dispatch(setCurrentTopic(topic));\n                    }\n            });\n        }\n        if(position !== -1){\n            alert(topic + \" topic already exists. Choose different name\");\n        }\n        setOpen(false);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteCurrentTopic = () => {\n        if(currentTopic?.length > 0){\n            // delete the current Topic from database as well as state\n            dbRef.doc(currentSubject).collection(\"topics\")\n            .doc(currentTopic).delete().then(\n                dispatch(deleteTopic(currentTopic))\n            )\n            .catch(error => console.log(error.message));\n        }\n    }\n\n  return (\n    <div className=\"topic\">\n        \n        {/* Topic selection, adding, editing, deletion form */}\n        <div className=\"topic__form\">\n\n            <FormControl variant=\"filled\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Add Topic</InputLabel>\n                <Select\n                    value={currentTopic}\n                    onChange={handleChange}\n                >\n                    {topicsList.map(item => (\n                        (topicsList?.length > 0) \n                        ? <MenuItem style={{overflowX: auto}} value={item}>{item}</MenuItem>\n                        : <MenuItem value=\"\"><em>None</em></MenuItem>\n                    ))}\n                    \n                </Select>\n            </FormControl>\n\n            <div className=\"topic__buttons\">\n                <IconButton className=\"topic__addButton\" onClick={handleClickOpen}>\n                    <AddBoxIcon style={{ color: green[500] }} fontSize=\"medium\" />\n                </IconButton>\n\n                <IconButton className=\"topic__editButton\" onClick={handleClickOpen}>\n                    <EditIcon color=\"primary\" fontSize=\"medium\" />\n                </IconButton>\n\n                <IconButton className=\"topic__deleteButton\" onClick={deleteCurrentTopic}>\n                    <DeleteIcon color=\"secondary\" fontSize=\"medium\" />      \n                </IconButton>\n            </div>\n        </div>\n\n        {/* Action Dialog Box (For adding or editing) */}\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Add or Edit a Topic</DialogTitle>\n            <DialogContent>\n                <form className={classes.container}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"demo-dialog-native\">Topic</InputLabel>\n                        <Input value={topic} onChange={e => setTopic(e.target.value)}/>\n                    </FormControl>\n                </form>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleCloseAdd} color=\"primary\">Add</Button>\n                <Button onClick={handleCloseEdit} color=\"primary\">Edit</Button>\n            </DialogActions>\n        </Dialog>\n\n    </div>\n  );\n}\n\nexport default Topic;\n"]},"metadata":{},"sourceType":"module"}