{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notes: [],\n  subjectsList: [\"Maths\", \"Physics\"],\n  topicsList: [],\n  currentSubject: '',\n  currentTopic: ''\n};\n\nconst subjectRemover = subject => {\n  var tempSubjects = state.subjectsList;\n  tempSubjects = tempSubjects.filter(function (v) {\n    return v !== action.payload.old;\n  });\n  state.subjectsList = tempSubjects;\n};\n\nconst notesSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    saveSubject: (state, action) => {\n      state.subjectsList.push(action.payload);\n      state.currentSubject = action.payload;\n      alert(\"Subject added successfully\");\n    },\n    updateSubjectsList: (state, action) => {\n      subjectRemover(action.payload.old);\n      tempSubjects.push(action.payload.new);\n      state.currentSubject = action.payload.new;\n      alert(\"Subject name edited successfully\");\n    },\n    deleteSubject: (state, action) => {\n      subjectRemover(action.payload);\n      alert(\"Subject deleted successfully\");\n    },\n    saveNote: (state, action) => {\n      state.notes.push(action.payload);\n    },\n    setCurrentSubject: (state, action) => {\n      state.currentSubject = action.payload;\n    }\n  }\n});\nexport const {\n  saveSubject,\n  updateSubjectsList,\n  deleteSubject,\n  saveNote,\n  setCurrentSubject\n} = notesSlice.actions;\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/features/notesSlice.js"],"names":["createSlice","initialState","notes","subjectsList","topicsList","currentSubject","currentTopic","subjectRemover","subject","tempSubjects","state","filter","v","action","payload","old","notesSlice","name","reducers","saveSubject","push","alert","updateSubjectsList","new","deleteSubject","saveNote","setCurrentSubject","actions","selectSubjectsList","notebook","selectCurrentSubject","selectTopicsList","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,YAAY,EAAE,CAAC,OAAD,EAAU,SAAV,CAFG;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,cAAc,EAAE,EAJC;AAKjBC,EAAAA,YAAY,EAAE;AALG,CAArB;;AAQA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAChC,MAAIC,YAAY,GAAGC,KAAK,CAACP,YAAzB;AACAM,EAAAA,YAAY,GAAGA,YAAY,CAACE,MAAb,CAAoB,UAASC,CAAT,EAAY;AAC3C,WAAOA,CAAC,KAAKC,MAAM,CAACC,OAAP,CAAeC,GAA5B;AACH,GAFc,CAAf;AAGAL,EAAAA,KAAK,CAACP,YAAN,GAAqBM,YAArB;AACH,CAND;;AAQA,MAAMO,UAAU,GAAGhB,WAAW,CAAC;AAC3BiB,EAAAA,IAAI,EAAE,UADqB;AAE3BhB,EAAAA,YAF2B;AAG3BiB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQG,MAAR,KAAmB;AAC5BH,MAAAA,KAAK,CAACP,YAAN,CAAmBiB,IAAnB,CAAwBP,MAAM,CAACC,OAA/B;AACAJ,MAAAA,KAAK,CAACL,cAAN,GAAuBQ,MAAM,CAACC,OAA9B;AACAO,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,KALK;AAONC,IAAAA,kBAAkB,EAAE,CAACZ,KAAD,EAAQG,MAAR,KAAmB;AACnCN,MAAAA,cAAc,CAACM,MAAM,CAACC,OAAP,CAAeC,GAAhB,CAAd;AACAN,MAAAA,YAAY,CAACW,IAAb,CAAkBP,MAAM,CAACC,OAAP,CAAeS,GAAjC;AACAb,MAAAA,KAAK,CAACL,cAAN,GAAuBQ,MAAM,CAACC,OAAP,CAAeS,GAAtC;AACAF,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,KAZK;AAcNG,IAAAA,aAAa,EAAE,CAACd,KAAD,EAAQG,MAAR,KAAmB;AAC9BN,MAAAA,cAAc,CAACM,MAAM,CAACC,OAAR,CAAd;AACAO,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KAjBK;AAmBNI,IAAAA,QAAQ,EAAE,CAACf,KAAD,EAAQG,MAAR,KAAmB;AACzBH,MAAAA,KAAK,CAACR,KAAN,CAAYkB,IAAZ,CAAiBP,MAAM,CAACC,OAAxB;AACH,KArBK;AAuBNY,IAAAA,iBAAiB,EAAE,CAAChB,KAAD,EAAQG,MAAR,KAAmB;AAClCH,MAAAA,KAAK,CAACL,cAAN,GAAuBQ,MAAM,CAACC,OAA9B;AACH;AAzBK;AAHiB,CAAD,CAA9B;AAiCA,OAAO,MAAM;AACTK,EAAAA,WADS;AACIG,EAAAA,kBADJ;AACwBE,EAAAA,aADxB;AACuCC,EAAAA,QADvC;AACiDC,EAAAA;AADjD,IAETV,UAAU,CAACW,OAFR;AAIP,OAAO,MAAMC,kBAAkB,GAAGlB,KAAK,IAAIA,KAAK,CAACmB,QAAN,CAAe1B,YAAnD;AACP,OAAO,MAAM2B,oBAAoB,GAAGpB,KAAK,IAAIA,KAAK,CAACmB,QAAN,CAAexB,cAArD;AACP,OAAO,MAAM0B,gBAAgB,GAAGrB,KAAK,IAAIA,KAAK,CAACmB,QAAN,CAAezB,UAAjD;AAGP,eAAeY,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    notes: [],\n    subjectsList: [\"Maths\", \"Physics\"],\n    topicsList: [],\n    currentSubject: '',\n    currentTopic: '',\n}\n\nconst subjectRemover = (subject) => {\n    var tempSubjects = state.subjectsList;\n    tempSubjects = tempSubjects.filter(function(v) {\n        return v !== action.payload.old;\n    });\n    state.subjectsList = tempSubjects;\n}\n\nconst notesSlice = createSlice({\n    name: 'notebook',\n    initialState,\n    reducers: {\n        saveSubject: (state, action) => {\n            state.subjectsList.push(action.payload);\n            state.currentSubject = action.payload;\n            alert(\"Subject added successfully\");\n        },\n\n        updateSubjectsList: (state, action) => {\n            subjectRemover(action.payload.old);\n            tempSubjects.push(action.payload.new);\n            state.currentSubject = action.payload.new;\n            alert(\"Subject name edited successfully\");\n        },\n\n        deleteSubject: (state, action) => {\n            subjectRemover(action.payload);\n            alert(\"Subject deleted successfully\");\n        },\n\n        saveNote: (state, action) => {\n            state.notes.push(action.payload);\n        },\n\n        setCurrentSubject: (state, action) => {\n            state.currentSubject = action.payload;\n        },\n\n    }\n});\n\nexport const {\n    saveSubject, updateSubjectsList, deleteSubject, saveNote, setCurrentSubject\n} = notesSlice.actions\n\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\n\n\nexport default notesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}