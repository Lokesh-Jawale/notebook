{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notes: [],\n  subjectsList: [\"Maths\", \"Physics\"],\n  topicsList: [],\n  currentSubject: '',\n  currentTopic: ''\n};\nconst notesSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    saveSubject: (state, action) => {\n      state.subjectsList.push(action.payload);\n      state.currentSubject = action.payload;\n      alert(\"Subject added successfully\");\n    },\n    updateSubjectsList: (state, action) => {\n      var tempSubjects = state.subjectsList;\n      tempSubjects.push(action.payload.new);\n      tempSubjects = tempSubjects.filter(function (v) {\n        return v !== action.payload.old;\n      });\n      state.subjectsList = tempSubjects;\n      state.currentSubject = action.payload.new;\n      alert(\"Subject name edited successfully\");\n    },\n    deleteSubject: (state, action) => {\n      alert(\"Subject deleted successfully\");\n    },\n    saveNote: (state, action) => {\n      state.notes.push(action.payload);\n    },\n    setCurrentSubject: (state, action) => {\n      state.currentSubject = action.payload;\n    }\n  }\n});\nexport const {\n  saveSubject,\n  updateSubjectsList,\n  deleteSubject,\n  saveNote,\n  setCurrentSubject\n} = notesSlice.actions;\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/features/notesSlice.js"],"names":["createSlice","initialState","notes","subjectsList","topicsList","currentSubject","currentTopic","notesSlice","name","reducers","saveSubject","state","action","push","payload","alert","updateSubjectsList","tempSubjects","new","filter","v","old","deleteSubject","saveNote","setCurrentSubject","actions","selectSubjectsList","notebook","selectCurrentSubject","selectTopicsList","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,YAAY,EAAE,CAAC,OAAD,EAAU,SAAV,CAFG;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,cAAc,EAAE,EAJC;AAKjBC,EAAAA,YAAY,EAAE;AALG,CAArB;AAQA,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAC3BQ,EAAAA,IAAI,EAAE,UADqB;AAE3BP,EAAAA,YAF2B;AAG3BQ,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACR,YAAN,CAAmBU,IAAnB,CAAwBD,MAAM,CAACE,OAA/B;AACAH,MAAAA,KAAK,CAACN,cAAN,GAAuBO,MAAM,CAACE,OAA9B;AACAC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,KALK;AAONC,IAAAA,kBAAkB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAIK,YAAY,GAAGN,KAAK,CAACR,YAAzB;AACAc,MAAAA,YAAY,CAACJ,IAAb,CAAkBD,MAAM,CAACE,OAAP,CAAeI,GAAjC;AACAD,MAAAA,YAAY,GAAGA,YAAY,CAACE,MAAb,CAAoB,UAASC,CAAT,EAAY;AAC3C,eAAOA,CAAC,KAAKR,MAAM,CAACE,OAAP,CAAeO,GAA5B;AACH,OAFc,CAAf;AAGAV,MAAAA,KAAK,CAACR,YAAN,GAAqBc,YAArB;AACAN,MAAAA,KAAK,CAACN,cAAN,GAAuBO,MAAM,CAACE,OAAP,CAAeI,GAAtC;AACAH,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,KAhBK;AAkBNO,IAAAA,aAAa,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC9BG,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KApBK;AAsBNQ,IAAAA,QAAQ,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACT,KAAN,CAAYW,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACH,KAxBK;AA0BNU,IAAAA,iBAAiB,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACN,cAAN,GAAuBO,MAAM,CAACE,OAA9B;AACH;AA5BK;AAHiB,CAAD,CAA9B;AAoCA,OAAO,MAAM;AACTJ,EAAAA,WADS;AACIM,EAAAA,kBADJ;AACwBM,EAAAA,aADxB;AACuCC,EAAAA,QADvC;AACiDC,EAAAA;AADjD,IAETjB,UAAU,CAACkB,OAFR;AAIP,OAAO,MAAMC,kBAAkB,GAAGf,KAAK,IAAIA,KAAK,CAACgB,QAAN,CAAexB,YAAnD;AACP,OAAO,MAAMyB,oBAAoB,GAAGjB,KAAK,IAAIA,KAAK,CAACgB,QAAN,CAAetB,cAArD;AACP,OAAO,MAAMwB,gBAAgB,GAAGlB,KAAK,IAAIA,KAAK,CAACgB,QAAN,CAAevB,UAAjD;AAGP,eAAeG,UAAU,CAACuB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    notes: [],\n    subjectsList: [\"Maths\", \"Physics\"],\n    topicsList: [],\n    currentSubject: '',\n    currentTopic: '',\n}\n\nconst notesSlice = createSlice({\n    name: 'notebook',\n    initialState,\n    reducers: {\n        saveSubject: (state, action) => {\n            state.subjectsList.push(action.payload);\n            state.currentSubject = action.payload;\n            alert(\"Subject added successfully\");\n        },\n\n        updateSubjectsList: (state, action) => {\n            var tempSubjects = state.subjectsList;\n            tempSubjects.push(action.payload.new);\n            tempSubjects = tempSubjects.filter(function(v) {\n                return v !== action.payload.old;\n            });\n            state.subjectsList = tempSubjects;\n            state.currentSubject = action.payload.new;\n            alert(\"Subject name edited successfully\");\n        },\n\n        deleteSubject: (state, action) => {\n            alert(\"Subject deleted successfully\");\n        },\n\n        saveNote: (state, action) => {\n            state.notes.push(action.payload);\n        },\n\n        setCurrentSubject: (state, action) => {\n            state.currentSubject = action.payload;\n        },\n\n    }\n});\n\nexport const {\n    saveSubject, updateSubjectsList, deleteSubject, saveNote, setCurrentSubject\n} = notesSlice.actions\n\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\n\n\nexport default notesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}