{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  note: \"\",\n  subjectsList: [],\n  topicsList: [],\n  currentSubject: '',\n  currentTopic: ''\n};\nconst notesSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    saveSubject: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload);\n\n      if (position === -1) {\n        state.subjectsList.push(action.payload);\n        alert(\"Subject (\" + action.payload + \") added successfully\");\n      }\n    },\n    updateSubjectsList: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload.old);\n      if (position !== -1) state.subjectsList[position] = action.payload.new;\n      state.currentSubject = action.payload.new;\n      alert(\"Subject name edited successfully\");\n    },\n    deleteSubject: (state, action) => {\n      let position = state.subjectsList.indexOf(action.payload);\n\n      if (position !== -1) {\n        state.subjectsList.splice(position, 1);\n        alert(\"Subject (\" + action.payload + \") deleted successfully\");\n        state.currentSubject = state.subjectsList[0];\n      } else state.currentSubject = \"\";\n    },\n    saveTopic: (state, action) => {\n      let position = state.topicsList.indexOf(action.payload);\n\n      if (position === -1) {\n        state.topicsList.push(action.payload);\n        alert(\"Subject (\" + action.payload + \") added successfully\");\n      }\n\n      state.currentTopic = action.payload;\n    },\n    updateTopicsList: (state, action) => {\n      let position = state.topicsList.indexOf(action.payload.old);\n      if (position !== -1) state.topicsList[position] = action.payload.new;\n      state.currentTopic = action.payload.new;\n      alert(\"Subject name edited successfully\");\n    },\n    deleteTopic: (state, action) => {\n      let position = state.topicsList.indexOf(action.payload);\n\n      if (position !== -1) {\n        state.topicsList.splice(position, 1);\n        alert(\"Subject (\" + action.payload + \") deleted successfully\");\n        state.currentTopic = state.topicsList[0];\n      } else state.currentTopic = \"\";\n    },\n    saveNote: (state, action) => {\n      state.note = action.payload;\n    },\n    setCurrentSubject: (state, action) => {\n      state.currentSubject = action.payload;\n    },\n    setCurrentTopic: (state, action) => {\n      state.currentTopic = action.payload;\n    }\n  }\n});\nexport const {\n  saveSubject,\n  updateSubjectsList,\n  deleteSubject,\n  saveTopic,\n  updateTopicsList,\n  deleteTopic,\n  saveNote,\n  setCurrentSubject,\n  setCurrentTopic\n} = notesSlice.actions;\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport const selectCurrentTopic = state => state.notebook.currentTopic;\nexport const selectNote = state => state.notebook.note;\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/features/notesSlice.js"],"names":["createSlice","initialState","note","subjectsList","topicsList","currentSubject","currentTopic","notesSlice","name","reducers","saveSubject","state","action","position","indexOf","payload","push","alert","updateSubjectsList","old","new","deleteSubject","splice","saveTopic","updateTopicsList","deleteTopic","saveNote","setCurrentSubject","setCurrentTopic","actions","selectSubjectsList","notebook","selectCurrentSubject","selectTopicsList","selectCurrentTopic","selectNote","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    note: \"\",\n    subjectsList: [],\n    topicsList: [],\n    currentSubject: '',\n    currentTopic: '',\n}\n\nconst notesSlice = createSlice({\n    name: 'notebook',\n    initialState,\n    reducers: {\n        saveSubject: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload);\n            if(position === -1){\n                state.subjectsList.push(action.payload);\n                alert(\"Subject (\" + action.payload +\") added successfully\");\n            }\n        },\n\n        updateSubjectsList: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload.old);\n            if(position !== -1) state.subjectsList[position] = action.payload.new;\n            state.currentSubject = action.payload.new;\n            alert(\"Subject name edited successfully\");\n        },\n\n        deleteSubject: (state, action) => {\n            let position = state.subjectsList.indexOf(action.payload);\n            if(position !== -1){\n                state.subjectsList.splice(position, 1);\n                alert(\"Subject (\" + action.payload +\") deleted successfully\");\n                state.currentSubject = state.subjectsList[0];\n            }\n            else state.currentSubject = \"\";\n        },\n\n        saveTopic: (state, action) => {\n            let position = state.topicsList.indexOf(action.payload);\n            if(position === -1){\n                state.topicsList.push(action.payload);\n                alert(\"Subject (\" + action.payload +\") added successfully\");\n            }\n            state.currentTopic = action.payload;\n        },\n\n        updateTopicsList: (state, action) => {\n            let position = state.topicsList.indexOf(action.payload.old);\n            if(position !== -1) state.topicsList[position] = action.payload.new;\n            state.currentTopic = action.payload.new;\n            alert(\"Subject name edited successfully\");\n        },\n\n        deleteTopic: (state, action) => {\n            let position = state.topicsList.indexOf(action.payload);\n            if(position !== -1){\n                state.topicsList.splice(position, 1);\n                alert(\"Subject (\" + action.payload +\") deleted successfully\");\n                state.currentTopic = state.topicsList[0];\n            }\n            else state.currentTopic = \"\";\n        },\n\n        saveNote: (state, action) => {\n            state.note = action.payload;\n        },\n\n        setCurrentSubject: (state, action) => {\n            state.currentSubject = action.payload;\n        },\n\n        setCurrentTopic: (state, action) => {\n            state.currentTopic = action.payload;\n        },\n    }\n});\n\nexport const {\n    saveSubject, updateSubjectsList, deleteSubject, \n    saveTopic, updateTopicsList, deleteTopic, \n    saveNote, setCurrentSubject, setCurrentTopic\n} = notesSlice.actions\n\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport const selectCurrentTopic = state => state.notebook.currentTopic;\nexport const selectNote = state => state.notebook.note;\n\nexport default notesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}