{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note() {\n  _s();\n\n  const [inputNote, setInputNote] = useState('');\n  const [read, setRead] = useState(false);\n  const dispatch = useDispatch();\n  const note = useSelector(selectNote);\n\n  const addNote = e => {\n    e.preventDefault();\n\n    if ((inputNote === null || inputNote === void 0 ? void 0 : inputNote.length) === 0) {\n      alert(\"Note is empty Please add something\");\n    } else {\n      setRead(true);\n      dispatch(saveNote(inputNote));\n      alert(\"Note added successfully\");\n    }\n  };\n\n  const editNote = e => {\n    setRead(false);\n  };\n\n  const deleteNote = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputNote\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), read ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add a inputNote (Default inputNote) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      className: \"note__input\",\n      maxRows: 6,\n      \"aria-label\": \"Add notes\",\n      placeholder: \"Add notes ...\",\n      value: inputNote,\n      disabled: read,\n      onChange: e => setInputNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note__button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addNote,\n        disabled: !inputNote,\n        color: \"primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: editNote,\n        disabled: !inputNote,\n        color: \"primary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: deleteNote,\n        disabled: !inputNote || !read,\n        color: \"secondary\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Note, \"vmvrPHxnJMg0le0bPPezW6UoOEM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js"],"names":["React","useState","TextareaAutosize","Button","useDispatch","useSelector","Note","inputNote","setInputNote","read","setRead","dispatch","note","selectNote","addNote","e","preventDefault","length","alert","saveNote","editNote","deleteNote","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMU,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAACQ,UAAD,CAAxB;;AAEA,QAAMC,OAAO,GAAIC,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAAAT,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEU,MAAX,MAAsB,CAAzB,EAA2B;AACvBC,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH,KAFD,MAGI;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,QAAQ,CAACQ,QAAQ,CAACZ,SAAD,CAAT,CAAR;AACAW,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,GAVD;;AAYA,QAAME,QAAQ,GAAIL,CAAD,IAAO;AACpBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMW,UAAU,GAAIN,CAAD,IAAO,CAEzB,CAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGMN,IAAD,gBAAS;AAAA;AAAA;AAAA;AAAA,YAAT,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHxB,eAMI,QAAC,gBAAD;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,OAAO,EAAE,CAFb;AAGI,oBAAW,WAHf;AAII,MAAA,WAAW,EAAC,eAJhB;AAKI,MAAA,KAAK,EAAEF,SALX;AAMI,MAAA,QAAQ,EAAGE,IANf;AAOI,MAAA,QAAQ,EAAEM,CAAC,IAAIP,YAAY,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV;AAP/B;AAAA;AAAA;AAAA;AAAA,YANJ,eAgBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAET,OAArC;AAA8C,QAAA,QAAQ,EAAE,CAACP,SAAzD;AAAoE,QAAA,KAAK,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEa,QAArC;AAA+C,QAAA,QAAQ,EAAE,CAACb,SAA1D;AAAqE,QAAA,KAAK,EAAC,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEc,UAArC;AAAiD,QAAA,QAAQ,EAAE,CAACd,SAAD,IAAc,CAACE,IAA1E;AAAgF,QAAA,KAAK,EAAC,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GApDQH,I;UAIYF,W,EACJC,W;;;KALRC,I;AAsDT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Note() {\n\n    const [inputNote, setInputNote] = useState('');\n    const [read, setRead] = useState(false);\n    const dispatch = useDispatch();\n    const note = useSelector(selectNote);\n\n    const addNote = (e) => {\n        e.preventDefault();\n        if(inputNote?.length === 0){\n            alert(\"Note is empty Please add something\");\n        }\n        else{\n            setRead(true);\n            dispatch(saveNote(inputNote));\n            alert(\"Note added successfully\");\n        }\n    }\n\n    const editNote = (e) => {\n        setRead(false);\n    }\n\n    const deleteNote = (e) => {\n\n    }\n\n    return (\n        <div className=\"inputNote\">\n            <h2>Notes</h2>\n\n            {(read)? (<p></p>) :<p>Add a inputNote (Default inputNote) </p>}\n\n            {/* <input  /> */}\n            <TextareaAutosize\n                className=\"note__input\"\n                maxRows={6}\n                aria-label=\"Add notes\"\n                placeholder=\"Add notes ...\"\n                value={inputNote}\n                disabled= {read}\n                onChange={e => setInputNote(e.target.value)}\n            />\n    \n            <div className=\"note__button\">\n                <Button variant=\"contained\" onClick={addNote} disabled={!inputNote} color=\"primary\">Add</Button>\n                <Button variant=\"contained\" onClick={editNote} disabled={!inputNote} color=\"primary\">Edit</Button>\n                <Button variant=\"contained\" onClick={deleteNote} disabled={!inputNote || !read} color=\"secondary\">Delete</Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}