{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notes: [],\n  subjectsList: [\"Maths\", \"Physics\"],\n  topicsList: [],\n  currentSubject: '',\n  currentTopic: ''\n};\nconst notesSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    saveSubject: (state, action) => {\n      let position = fruits.indexOf(action.payload);\n\n      if (position === -1) {\n        state.subjectsList.push(action.payload);\n        alert(\"Subject added successfully\");\n      } else {\n        alert(\"Subject already exists\");\n      }\n\n      state.currentSubject = action.payload;\n    },\n    updateSubjectsList: (state, action) => {\n      let position = fruits.indexOf(action.payload);\n\n      if (position === -1) {\n        state.subjectsList.push(action.payload);\n        alert(\"Subject added successfully\");\n      } else {\n        alert(\"Subject already exists\");\n      }\n\n      state.currentSubject = action.payload.new;\n      alert(\"Subject name edited successfully\");\n    },\n    deleteSubject: (state, action) => {\n      var _tempSubjects;\n\n      var tempSubjects = state.subjectsList;\n      tempSubjects = tempSubjects.filter(function (v) {\n        return v !== action.payload;\n      });\n      state.subjectsList = tempSubjects;\n      if (((_tempSubjects = tempSubjects) === null || _tempSubjects === void 0 ? void 0 : _tempSubjects.length) > 0) state.currentSubject = tempSubjects[0];else state.currentSubject = \"\";\n      alert(\"Subject deleted successfully\");\n    },\n    saveNote: (state, action) => {\n      state.notes.push(action.payload);\n    },\n    setCurrentSubject: (state, action) => {\n      state.currentSubject = action.payload;\n    }\n  }\n});\nexport const {\n  saveSubject,\n  updateSubjectsList,\n  deleteSubject,\n  saveNote,\n  setCurrentSubject\n} = notesSlice.actions;\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/features/notesSlice.js"],"names":["createSlice","initialState","notes","subjectsList","topicsList","currentSubject","currentTopic","notesSlice","name","reducers","saveSubject","state","action","position","fruits","indexOf","payload","push","alert","updateSubjectsList","new","deleteSubject","tempSubjects","filter","v","length","saveNote","setCurrentSubject","actions","selectSubjectsList","notebook","selectCurrentSubject","selectTopicsList","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    notes: [],\n    subjectsList: [\"Maths\", \"Physics\"],\n    topicsList: [],\n    currentSubject: '',\n    currentTopic: '',\n}\n\nconst notesSlice = createSlice({\n    name: 'notebook',\n    initialState,\n    reducers: {\n        saveSubject: (state, action) => {\n            let position = fruits.indexOf(action.payload);\n            if(position === -1){\n                state.subjectsList.push(action.payload);\n                alert(\"Subject added successfully\");\n            }\n            else{\n                alert(\"Subject already exists\");\n            }\n            state.currentSubject = action.payload;\n        },\n\n        updateSubjectsList: (state, action) => {\n            let position = fruits.indexOf(action.payload);\n            if(position === -1){\n                state.subjectsList.push(action.payload);\n                alert(\"Subject added successfully\");\n            }\n            else{\n                alert(\"Subject already exists\");\n            }\n            state.currentSubject = action.payload.new;\n            alert(\"Subject name edited successfully\");\n        },\n\n        deleteSubject: (state, action) => {\n            var tempSubjects = state.subjectsList;\n            tempSubjects = tempSubjects.filter(function(v) {\n                return v !== action.payload;\n            });\n            state.subjectsList = tempSubjects;\n            if(tempSubjects?.length > 0) \n                state.currentSubject = tempSubjects[0];\n            else \n                state.currentSubject = \"\";\n            alert(\"Subject deleted successfully\");\n        },\n\n        saveNote: (state, action) => {\n            state.notes.push(action.payload);\n        },\n\n        setCurrentSubject: (state, action) => {\n            state.currentSubject = action.payload;\n        },\n\n    }\n});\n\nexport const {\n    saveSubject, updateSubjectsList, deleteSubject, saveNote, setCurrentSubject\n} = notesSlice.actions\n\nexport const selectSubjectsList = state => state.notebook.subjectsList;\nexport const selectCurrentSubject = state => state.notebook.currentSubject;\nexport const selectTopicsList = state => state.notebook.topicsList;\n\n\nexport default notesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}