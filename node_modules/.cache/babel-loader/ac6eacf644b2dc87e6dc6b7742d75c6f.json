{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Topic.js\",\n    _s = $RefreshSig$();\n\nimport './Topic.css';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { green } from '@material-ui/core/colors';\nimport { db } from '../firebase.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveTopic, updateTopicsList, deleteTopic, setCurrentTopic } from '../features/notesSlice';\nimport { selectTopicsList, selectCurrentSubject, selectCurrentTopic } from '../features/notesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nfunction Topic() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [topic, setTopic] = useState('');\n  const dispatch = useDispatch();\n  const topicsList = useSelector(selectTopicsList);\n  const currentTopic = useSelector(selectCurrentTopic);\n  const currentSubject = useSelector(selectCurrentSubject);\n  useEffect(() => {\n    if (currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.length) {\n      db.collection(\"notebooks\").doc(currentSubject).onSnapshot(doc => {\n        // console.log(doc.id, \" \", doc.data()),\n        dispatch(saveTopic(doc.data().topicsList));\n      });\n    }\n  }, [currentSubject]);\n\n  const handleChange = event => {\n    var _event$target$value;\n\n    setTopic(event.target.value);\n\n    if (((_event$target$value = event.target.value) === null || _event$target$value === void 0 ? void 0 : _event$target$value.length) > 0) {\n      dispatch(setCurrentTopic(event.target.value));\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseAdd = () => {\n    if ((topic === null || topic === void 0 ? void 0 : topic.length) > 0) {\n      dispatch(saveTopic(topic));\n    }\n\n    setOpen(false);\n  };\n\n  const handleCloseEdit = () => {\n    if ((topic === null || topic === void 0 ? void 0 : topic.length) > 0 && currentTopic !== topic) {\n      dispatch(updateTopicsList({\n        old: currentTopic,\n        new: topic\n      }));\n    }\n\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteCurrentTopic = () => {\n    if ((currentTopic === null || currentTopic === void 0 ? void 0 : currentTopic.length) > 0) {\n      dispatch(deleteTopic(currentTopic));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topic\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-outlined-label\",\n          children: \"Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: currentTopic,\n          onChange: handleChange,\n          children: topicsList.map(item => (topicsList === null || topicsList === void 0 ? void 0 : topicsList.length) > 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"topic__addButton\",\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n          style: {\n            color: green[500]\n          },\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"topic__editButton\",\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          color: \"primary\",\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"topic__deleteButton\",\n        onClick: deleteCurrentTopic,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"secondary\",\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add or Edit a Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"demo-dialog-native\",\n              children: \"Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: topic,\n              onChange: e => setTopic(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAdd,\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEdit,\n          color: \"primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Topic, \"xvGbQG2hom58G3jVegF+3f4cFKg=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Topic;\nexport default Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Topic.js"],"names":["React","useState","useEffect","makeStyles","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","FormControl","Select","AddBoxIcon","DeleteIcon","EditIcon","green","db","useDispatch","useSelector","saveTopic","updateTopicsList","deleteTopic","setCurrentTopic","selectTopicsList","selectCurrentSubject","selectCurrentTopic","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","Topic","classes","open","setOpen","topic","setTopic","dispatch","topicsList","currentTopic","currentSubject","length","collection","doc","onSnapshot","data","handleChange","event","target","value","handleClickOpen","handleCloseAdd","handleCloseEdit","old","new","handleClose","deleteCurrentTopic","map","item","color","e"],"mappings":"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","sourcesContent":["import './Topic.css';\nimport React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { green } from '@material-ui/core/colors';\nimport {db} from '../firebase.js';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveTopic, updateTopicsList, deleteTopic,  setCurrentTopic } from '../features/notesSlice';\nimport { selectTopicsList, selectCurrentSubject, selectCurrentTopic } from '../features/notesSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nfunction Topic() {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [topic, setTopic] = useState('');\n    const dispatch = useDispatch();\n    const topicsList = useSelector(selectTopicsList);\n    const currentTopic = useSelector(selectCurrentTopic);\n    const currentSubject = useSelector(selectCurrentSubject);\n\n    useEffect(() => {\n        if(currentSubject?.length){\n            db.collection(\"notebooks\")\n                .doc(currentSubject)\n                .onSnapshot((doc) => {\n                    // console.log(doc.id, \" \", doc.data()),\n                    dispatch(saveTopic(doc.data().topicsList))\n                });\n        }\n    }, [currentSubject]);\n\n    const handleChange = (event) => {\n        setTopic(event.target.value);\n        if(event.target.value?.length > 0){\n            dispatch(setCurrentTopic(event.target.value));\n        }\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleCloseAdd = () => {\n        if(topic?.length > 0){\n            dispatch(saveTopic(topic));\n        }\n        setOpen(false);\n    };\n\n    const handleCloseEdit = () => {\n        if(topic?.length > 0 && currentTopic !== topic){\n            dispatch(updateTopicsList(\n                {old:currentTopic, new:topic}\n            ))\n        }\n        setOpen(false);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteCurrentTopic = () => {\n        if(currentTopic?.length > 0){\n            dispatch(deleteTopic(currentTopic));\n        }\n    }\n\n  return (\n    <div className=\"topic\">\n        \n        <div className=\"topic__buttons\">\n\n            <FormControl variant=\"filled\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Topic</InputLabel>\n                <Select\n                    value={currentTopic}\n                    onChange={handleChange}\n                >\n                    {topicsList.map(item => (\n                        (topicsList?.length > 0) \n                        ? <MenuItem value={item}>{item}</MenuItem>\n                        : <MenuItem value=\"\"><em>None</em></MenuItem>\n                    ))}\n                    \n                </Select>\n            </FormControl>\n\n            {/* <Button className=\"subject__addButton\" variant=\"outlined\" color=\"primary\" size=\"large\" onClick={handleClickOpen}>Add | Edit</Button> */}\n            {/* <Button type=\"button\" className=\"subject__deleteButton\" variant=\"outlined\" color=\"secondary\" size=\"large\" endIcon={<DeleteIcon />} onClick={deleteCurrentTopic}></Button> */}\n            <IconButton className=\"topic__addButton\" onClick={handleClickOpen}>\n                <AddBoxIcon style={{ color: green[500] }} fontSize=\"medium\" />\n            </IconButton>\n\n            <IconButton className=\"topic__editButton\" onClick={handleClickOpen}>\n                <EditIcon color=\"primary\" fontSize=\"medium\" />\n            </IconButton>\n\n            <IconButton className=\"topic__deleteButton\" onClick={deleteCurrentTopic}>\n                <DeleteIcon color=\"secondary\" fontSize=\"medium\" />      \n            </IconButton>\n        </div>\n\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Add or Edit a Topic</DialogTitle>\n            <DialogContent>\n                <form className={classes.container}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"demo-dialog-native\">Topic</InputLabel>\n                        <Input value={topic} onChange={e => setTopic(e.target.value)}/>\n                    </FormControl>\n                </form>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleCloseAdd} color=\"primary\">Add</Button>\n                <Button onClick={handleCloseEdit} color=\"primary\">Edit</Button>\n            </DialogActions>\n        </Dialog>\n\n    </div>\n  );\n}\n\nexport default Topic;\n"]},"metadata":{},"sourceType":"module"}