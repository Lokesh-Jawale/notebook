{"ast":null,"code":"var _jsxFileName = \"/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note() {\n  _s();\n\n  const [note, setNote] = useState('');\n  const [read, setRead] = useState(false);\n\n  const addNote = e => {\n    e.preventDefault();\n\n    if ((note === null || note === void 0 ? void 0 : note.length) === 0) {\n      alert(\"Note is empty Please add something\"); // return;\n    } else {\n      setRead(true);\n      alert(\"Note added successfully\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      className: \"note__input\",\n      maxRows: 6,\n      \"aria-label\": \"Add notes\",\n      placeholder: \"Add notes ...\",\n      value: note,\n      readOnly: read,\n      onChange: e => setNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addNote,\n      disabled: !note,\n      color: \"primary\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Note, \"dM40ZtsPG/iYATG7jRoRlSFiC08=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/lokesh/Documents/Web dev/Notebook/notebook/src/Components/Note.js"],"names":["React","useState","TextareaAutosize","Button","Note","note","setNote","read","setRead","addNote","e","preventDefault","length","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMQ,OAAO,GAAIC,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,MAAN,MAAiB,CAApB,EAAsB;AAClBC,MAAAA,KAAK,CAAC,oCAAD,CAAL,CADkB,CAElB;AACH,KAHD,MAII;AACAL,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAK,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,gBAAD;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,OAAO,EAAE,CAFb;AAGI,oBAAW,WAHf;AAII,MAAA,WAAW,EAAC,eAJhB;AAKI,MAAA,KAAK,EAAER,IALX;AAMI,MAAA,QAAQ,EAAGE,IANf;AAOI,MAAA,QAAQ,EAAEG,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV;AAP1B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAcI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAA0B,MAAA,QAAQ,EAAE,CAACJ,IAArC;AAA2C,MAAA,KAAK,EAAC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GApCQD,I;;KAAAA,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport './Note.css';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\n\n\nfunction Note() {\n\n    const [note, setNote] = useState('');\n    const [read, setRead] = useState(false);\n\n    const addNote = (e) => {\n        e.preventDefault();\n        if(note?.length === 0){\n            alert(\"Note is empty Please add something\");\n            // return;\n        }\n        else{\n            setRead(true);\n            alert(\"Note added successfully\");\n        }\n    }\n\n    return (\n        <div className=\"note\">\n            <h2>Notes</h2>\n\n            {/* <input  /> */}\n            <TextareaAutosize\n                className=\"note__input\"\n                maxRows={6}\n                aria-label=\"Add notes\"\n                placeholder=\"Add notes ...\"\n                value={note}\n                readOnly= {read}\n                onChange={e => setNote(e.target.value)}\n            />\n            \n            <Button onClick={addNote} disabled={!note} color=\"primary\">Add</Button>\n\n        </div>\n    )\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}